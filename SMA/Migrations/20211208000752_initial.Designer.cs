// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMA.Data;

namespace SMA.Migrations
{
    [DbContext(typeof(SMAContext))]
    [Migration("20211208000752_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("SMA.Contracts.Data.Atendente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Atendentes");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CepCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnderecoCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("TEXT");

                    b.Property<int>("TelefoneCliente")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AtendenteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("SMA.Contracts.Data.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AparelhoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AtendenteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataGarantia")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AparelhoId");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("OrdemServicos");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("SMA.Data.Aparelho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeSaida")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoDoDefeito")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaNaGarantia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroDeSerie")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Aparelhos");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Orcamento", b =>
                {
                    b.HasOne("SMA.Contracts.Data.Atendente", null)
                        .WithMany("Orcamento")
                        .HasForeignKey("AtendenteId");

                    b.HasOne("SMA.Contracts.Data.Cliente", null)
                        .WithMany("Orcamento")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("SMA.Contracts.Data.OrdemServico", b =>
                {
                    b.HasOne("SMA.Data.Aparelho", "Aparelho")
                        .WithMany()
                        .HasForeignKey("AparelhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMA.Contracts.Data.Atendente", null)
                        .WithMany("OrdemServico")
                        .HasForeignKey("AtendenteId");

                    b.HasOne("SMA.Contracts.Data.Cliente", "Cliente")
                        .WithMany("OrdemServico")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aparelho");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SMA.Data.Aparelho", b =>
                {
                    b.HasOne("SMA.Contracts.Data.Cliente", null)
                        .WithMany("Aparelhos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("SMA.Contracts.Data.Tecnico", null)
                        .WithMany("Aparelhos")
                        .HasForeignKey("TecnicoId");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Atendente", b =>
                {
                    b.Navigation("Orcamento");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Cliente", b =>
                {
                    b.Navigation("Aparelhos");

                    b.Navigation("Orcamento");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("SMA.Contracts.Data.Tecnico", b =>
                {
                    b.Navigation("Aparelhos");
                });
#pragma warning restore 612, 618
        }
    }
}
